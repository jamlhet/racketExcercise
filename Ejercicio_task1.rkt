#lang racket
(define (filteredmap function1 function2 function3 listx)
  (map (lambda (arg)
         (cond ((function1 arg) (function2 arg))
               (else (function3 arg))
               )
         )
       listx)
  )

(filteredmap even? (lambda (x) (+ x 1))
             (lambda (x) (* x 2))
             (list 1 2 3 4 5 6 7 8 9 10)
             )
(filteredmap even? (lambda (x) "si, si, even!")
             (lambda (x) "oh no!")
             (list 1 2 3 4 5 6 7 8 9 10)
             )